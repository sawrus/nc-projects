#summary Правила участия на проекте nc-projects

= Мои требования =

1)      Предоставление полной информации о вас : мобильный телефон (удобное для вас время дозвона), почтовый ящик (желательно Gmail  -если нету, то нужно завести*), skype*.

2)      Каждую неделю нужно будет отправлять Status файл (шаблон файла прикреплен к письму). Это будет так называемый Actual result

3)      Каждый месяц будет организована личная встреча с подведением итогов по намеченным планам  и работа над ошибками

4)      Программный код должен быть оформлен в соответствии с соглашением, которое тоже прикреплено к файлу (среда разработки idea по умолчанию настроена на такую конвенцию Ctrl-O, Ctrl-I). **.  Код должен читаться как книга ! (вот ваш главный концепт)

5)      Исправление ошибок, тестирование и разработка будет контролироваться в виде отчётов (в виде Implementation Reports). Пример репорта прикреплён к письму (обязательное требования!)

6)      Процент покрытия кода тестами должен быть ~70%, т.е например : соотношение 10строк теста на метод A:  15строк имплементации метода A. Использование алгоритмов и их анализ особо приветствуется

7)      Если будете писать мне письмо, обязательно используйте тэг в теме письма [NC Cources]  и предупреждайте заранее, если не будете посещать или не хотите или нет времени и т.д. Давайте экономить друг другу время, ребята !

8)      Выполнение пунктов 1-7

 

= Программное обеспечение =

1)      JVM и исходники языка Java 1.6 или выше - http://www.oracle.com/technetwork/java/javase/downloads/index.html (Java SE). При установке обязательно выберите наличие Java Docs, файл src.zip

2)      Среда Java разработки на стороне клиента – IntelliJ IDEA Community Edition. Горячие клавиши, ссылка http://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf (будет экономить до 30% времени при имплементации).

3)      СУБД Oracle , на курсах вам дадут ссылку на community версию. Желательно книгу почитать по Oracle

4)      Среда PL/SQL разработки – SQL Developer (free) или PL\SQL Developer (ultimate), В атаче прилагаю конфигурацию по оформлению для среды PL\SQL krrg.br

5)      Сервер приложений – Glass Fish или любой другой, который вы сможете настроить

6)      Среда разработки UML диаграмм, советую Visual Paradigm community версию + книжку какую-нибудь как их рисовать. Диаграммы последовательности и диаграммы классов.

7)      Поддержка SVN (уже есть если вы установили (2)). Мы заведём свой SVN или Git репозиторий в учебных целях на code.google.com. Если вы до этого не имели опыта работы с SVN – советую подробно изучить!

8)      Поддержка JUnit. Вы будете делать имплементацию посредством концепции TDD

9)      Mikogo – будем устраивать митинги думаю

 

= Литература =

1)     Алгоритмы – Кнут и другие мозго*

2)     Практика кодирования – дадюшка джоб Prentice.Hall.Clean.Code.A.Handbook.of.Agile.Software.Craftsmanship.Aug.2008.pdf **

3)     Паттерны проектирования – GoF (прочитать всю книгу желательно)

4)     Средства IPC – Стивенс (нужно знать обязательно все средства и уметь применять когда нужно)

5)     Чтение Java доков, которые предоставляются после установки JVM

6)     J2EE литература – подробнее позже напишу что именно читать или пришлю